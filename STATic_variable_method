STATIC DATA MEMBER:
  .Static data member belongs to class.
  .declaration of static variable inside the class only and define outside with the help of scope resolution(::).
  .Instance is not requird to access static variable.


STATIC MEMEBER FUNCTION:
  .It is a member function,that is used to access only static data members.
  .It cannot access non-static data members.
  .it can be called directly without instance of a class.




                                                       //STATIC VARIABLE
#include <iostream>
using namespace std;
class Employee
{
public:
  static int count;
  int id;
  string name;
    Employee (int id,string name)
  {
      this->id =id;
    this->name = name;
    count++;

  }
  void display ()
  {
    cout << name << " " << id << endl;
  }
};

int Employee::count = 0;




int
main ()
{
  Employee e1 (1,"Siva");			//creating an object of Employee
  Employee e2(2,"cva"); 
  e1.display();
  e2.display ();
  cout<<"Total no.of objects:"<<Employee::count<<endl;//Instance is not required to access static variable
  return 0;
}






                                                                     //STATIC METHOD

#include <iostream>
using namespace std;
class Employee
{
public:
  static int count;
  int id;
  string name;
    Employee (int id,string name)
  {
      this->id =id;
    this->name = name;
    count++;

  }
  void display ()
  {
    cout << name << " " << id << endl;
  }
  static void count_objects()//static method
  {
      cout<<"Total no.of objects:"<<count<<endl;
  }
};

int Employee::count = 0;
int main ()
{
  Employee e1 (1,"Siva");			//creating an object of Employee
  Employee e2(2,"cva"); 
  e1.display();
  e2.display ();
  Employee::count_objects();// we can directly call static method without instance of a class
  return 0;
}

